import styled from "styled-components";
import { Radio } from "antd";
import { t } from "i18next";
import { useQuery } from "@tanstack/react-query";
import { fetchStatistics } from "@/services/restaurantOrders";
import useTheme from "@/hooks/useTheme";
import StatusButton from "./StatusButton";
import CountdownClock from "@/assets/icons/sand-clock.svg?react";
import Completed from "@/assets/icons/completed.svg?react";
const { Group, Button } = Radio;

const CustomRadioGroup = styled(Group)`
  & {
    display: flex;
    gap: 15px;
  }
`;
const CustomRadioButton = styled(Button)`
  & {
    border-radius: 25px !important;
    border: none;
    padding-left: 30px;
  }
  &::before {
    display: none !important;
  }
  &::after {
    content: ${(props) => `"${props.count}"`};
    display: ${(props) => (props.hasCount === false ? "none" : "flex")};
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: #f5fbfb;
    position: absolute;
    left: 5px;
    top: 50%;
    transform: translateY(-50%);
    align-items: center;
    justify-content: center;
    color: #38acb1;
    font-size: 12px;
    font-weight: 700;
  }
`;
export const statuses = [
  "pending",
  "approved",
  "preparing",
  "ready",
  "delivering",
  "delivered",
  "declined",
  "canceled",
];
export default function StatusSelect({ onChange, value, ...props }) {
  const { data } = useQuery({
    queryKey: ["restaurantStatistics", value],
    queryFn: fetchStatistics,
  });
  const { token } = useTheme();
  const total =
    data?.data?.pending +
      data?.data?.approved +
      data?.data?.preparing +
      data?.data?.ready +
      data?.data?.delivering +
      data?.data?.delivered +
      data?.data?.declined +
      data?.data?.canceled || 0;
  return (
    <>
      <StatusButton
        color={"#219653"}
        icon={
          <Completed
            style={{
              width: "30px",
            }}
          />
        }
        count={data?.data?.approved ?? 0}
        text={t("all")}
        bgcolor="white"
      />
      <StatusButton
        color={"#FE8800"}
        icon={
          <CountdownClock
            style={{
              width: "30px",
            }}
          />
        }
        count={data?.data?.pending ?? 0}
        text={t("pending")}
        bgcolor="white"
      />
      <StatusButton
        color={"#0070DF"}
        bgcolor="white"
        icon={
          <svg
            width="25"
            height="24"
            viewBox="0 0 25 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1_1193)">
              <path
                d="M2.39941 12C2.39941 12.552 1.95141 13 1.39941 13C0.847414 13 0.399414 12.552 0.399414 12C0.399414 5.383 5.78241 0 12.3994 0C15.3864 0 18.2114 1.113 20.3994 3.077V1C20.3994 0.448 20.8464 0 21.3994 0C21.9524 0 22.3994 0.448 22.3994 1V4.5C22.3994 5.878 21.2784 7 19.8994 7H16.3994C15.8464 7 15.3994 6.552 15.3994 6C15.3994 5.448 15.8464 5 16.3994 5H19.5254C17.6504 3.089 15.1024 2 12.3994 2C6.88541 2 2.39941 6.486 2.39941 12ZM23.3994 11C22.8464 11 22.3994 11.448 22.3994 12C22.3994 17.514 17.9134 22 12.3994 22C9.69641 22 7.14841 20.911 5.27241 19H8.39941C8.95141 19 9.39941 18.552 9.39941 18C9.39941 17.448 8.95141 17 8.39941 17H4.89941C3.52141 17 2.39941 18.122 2.39941 19.5V23C2.39941 23.552 2.84741 24 3.39941 24C3.95141 24 4.39941 23.552 4.39941 23V20.923C6.58641 22.887 9.41241 24 12.3994 24C19.0164 24 24.3994 18.617 24.3994 12C24.3994 11.448 23.9524 11 23.3994 11ZM18.0954 9.866L17.1214 10.428C17.2874 10.925 17.3994 11.447 17.3994 12C17.3994 12.553 17.2884 13.075 17.1214 13.572L18.0954 14.134C18.5744 14.41 18.7384 15.022 18.4614 15.5C18.2754 15.821 17.9404 16 17.5944 16C17.4244 16 17.2524 15.957 17.0954 15.866L16.1224 15.304C15.4174 16.098 14.4784 16.679 13.3994 16.898V17.999C13.3994 18.551 12.9514 18.999 12.3994 18.999C11.8474 18.999 11.3994 18.551 11.3994 17.999V16.898C10.3204 16.678 9.38141 16.097 8.67641 15.304L7.70341 15.866C7.54541 15.957 7.37341 16 7.20441 16C6.85841 16 6.52241 15.821 6.33741 15.5C6.06141 15.021 6.22541 14.41 6.70341 14.134L7.67741 13.572C7.51141 13.075 7.39941 12.553 7.39941 12C7.39941 11.447 7.51041 10.925 7.67741 10.428L6.70341 9.866C6.22541 9.59 6.06141 8.978 6.33741 8.5C6.61341 8.021 7.22341 7.857 7.70341 8.134L8.67641 8.696C9.38141 7.902 10.3204 7.321 11.3994 7.102V6.001C11.3994 5.449 11.8474 5.001 12.3994 5.001C12.9514 5.001 13.3994 5.449 13.3994 6.001V7.102C14.4784 7.322 15.4174 7.903 16.1224 8.696L17.0954 8.134C17.5724 7.857 18.1844 8.021 18.4614 8.5C18.7374 8.979 18.5734 9.59 18.0954 9.866ZM15.3994 12C15.3994 10.346 14.0534 9 12.3994 9C10.7454 9 9.39941 10.346 9.39941 12C9.39941 13.654 10.7454 15 12.3994 15C14.0534 15 15.3994 13.654 15.3994 12Z"
                fill="#0070DF"
              />
            </g>
            <defs>
              <clipPath id="clip0_1_1193">
                <rect
                  width="24"
                  height="24"
                  fill="white"
                  transform="translate(0.399414)"
                />
              </clipPath>
            </defs>
          </svg>
        }
        count={data?.data?.approved ?? 0}
        text={t("currentRequests")}
      />{" "}
      <StatusButton
        color={"#BB6BD9"}
        bgcolor="white"
        icon={
          <svg
            width="25"
            height="24"
            viewBox="0 0 25 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1_1185)">
              <path
                d="M18.5994 8.50027C18.5994 9.16331 18.336 9.7992 17.8672 10.268C17.3983 10.7369 16.7624 11.0003 16.0994 11.0003C15.4363 11.0003 14.8005 10.7369 14.3316 10.268C13.8628 9.7992 13.5994 9.16331 13.5994 8.50027C13.5994 7.83723 13.8628 7.20135 14.3316 6.73251C14.8005 6.26367 15.4363 6.00027 16.0994 6.00027C16.7624 6.00027 17.3983 6.26367 17.8672 6.73251C18.336 7.20135 18.5994 7.83723 18.5994 8.50027ZM18.5934 15.3663C18.5385 16.9551 18.1418 18.5135 17.4304 19.9353C16.7749 21.1748 15.7907 22.2099 14.5857 22.927C13.3807 23.6441 12.0015 24.0154 10.5994 24.0003H9.59938V18.5003C9.59491 17.5734 9.22473 16.6857 8.56932 16.0303C7.91391 15.3749 7.02626 15.0047 6.09938 15.0003H0.599383V14.0003C0.584244 12.5981 0.955577 11.2189 1.67264 10.0139C2.38971 8.80896 3.42481 7.82474 4.66438 7.16927C6.08615 6.45787 7.64452 6.0612 9.23338 6.00627C10.6902 4.12451 12.5611 2.6038 14.7009 1.5622C16.8406 0.520601 19.1916 -0.013873 21.5714 0.000273676C21.9674 -0.00222854 22.36 0.0734566 22.7266 0.22299C23.0933 0.372522 23.4269 0.592962 23.7082 0.871669C23.9895 1.15038 24.213 1.48187 24.3659 1.84714C24.5189 2.21241 24.5982 2.60428 24.5994 3.00027C24.6163 5.38449 24.0833 7.7405 23.0416 9.8852C22 12.0299 20.4778 13.9055 18.5934 15.3663ZM2.68338 13.0003H4.94538C5.68803 11.3463 6.56042 9.75362 7.55438 8.23727C6.864 8.39789 6.19502 8.63957 5.56138 8.95727C4.79932 9.35969 4.14209 9.93497 3.64232 10.637C3.14255 11.3391 2.81414 12.1485 2.68338 13.0003ZM16.3624 17.0453C14.846 18.0392 13.2534 18.9116 11.5994 19.6543V21.9163C12.4512 21.7855 13.2605 21.4571 13.9626 20.9573C14.6647 20.4576 15.24 19.8003 15.6424 19.0383C15.9601 18.4046 16.2018 17.7357 16.3624 17.0453ZM22.5994 2.97227C22.5921 2.71194 22.4835 2.46472 22.2968 2.2832C22.11 2.10168 21.8598 2.00017 21.5994 2.00027C16.4394 2.14727 12.9494 4.12427 9.58138 8.82227C8.64153 10.1755 7.81505 11.604 7.11038 13.0933C8.2023 13.2966 9.20707 13.8258 9.99245 14.6112C10.7778 15.3966 11.307 16.4014 11.5104 17.4933C12.9997 16.7886 14.4282 15.9621 15.7814 15.0223C20.4754 11.6503 22.4524 8.16027 22.5994 2.97227ZM6.72138 17.8793C7.28015 18.4438 7.59359 19.206 7.59359 20.0003C7.59359 20.7946 7.28015 21.5568 6.72138 22.1213C5.81438 23.0273 3.09938 23.5863 1.97338 23.7853L0.567383 24.0323L0.814383 22.6263C1.01438 21.5003 1.57238 18.7853 2.47838 17.8783C3.05013 17.3329 3.80996 17.0288 4.60008 17.029C5.3902 17.0291 6.14989 17.3337 6.72138 17.8793ZM5.59938 20.0003C5.59974 19.8689 5.57403 19.7388 5.52373 19.6174C5.47344 19.4961 5.39956 19.3859 5.30638 19.2933C5.11886 19.1058 4.86455 19.0005 4.59938 19.0005C4.33422 19.0005 4.07991 19.1058 3.89238 19.2933C3.51113 19.9815 3.24335 20.7268 3.09938 21.5003C3.87319 21.3557 4.61871 21.0876 5.30738 20.7063C5.40026 20.6137 5.47388 20.5037 5.524 20.3825C5.57412 20.2613 5.59974 20.1314 5.59938 20.0003Z"
                fill="#BB6BD9"
              />
            </g>
            <defs>
              <clipPath id="clip0_1_1185">
                <rect
                  width="24"
                  height="24"
                  fill="white"
                  transform="translate(0.599609)"
                />
              </clipPath>
            </defs>
          </svg>
        }
        count={data?.data?.approved ?? 0}
        text={t("completedRequests")}
      />{" "}
      <StatusButton
        color={"#757575"}
        bgcolor="white"
        icon={
          <svg
            width="25"
            height="24"
            viewBox="0 0 25 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1_1178)">
              <path
                d="M12.7998 0C10.4264 0 8.10636 0.703788 6.13297 2.02236C4.15958 3.34094 2.62151 5.21509 1.71326 7.4078C0.805004 9.60051 0.567364 12.0133 1.03039 14.3411C1.49341 16.6689 2.6363 18.8071 4.31453 20.4853C5.99276 22.1635 8.13095 23.3064 10.4587 23.7694C12.7865 24.2324 15.1993 23.9948 17.392 23.0866C19.5847 22.1783 21.4589 20.6402 22.7774 18.6668C24.096 16.6935 24.7998 14.3734 24.7998 12C24.7964 8.81846 23.531 5.76821 21.2813 3.51852C19.0316 1.26883 15.9814 0.00344108 12.7998 0ZM12.7998 22C10.822 22 8.8886 21.4135 7.24411 20.3147C5.59962 19.2159 4.31789 17.6541 3.56101 15.8268C2.80414 13.9996 2.60611 11.9889 2.99196 10.0491C3.37781 8.10929 4.33022 6.32746 5.72874 4.92893C7.12727 3.53041 8.9091 2.578 10.8489 2.19215C12.7887 1.8063 14.7994 2.00433 16.6266 2.7612C18.4539 3.51808 20.0157 4.79981 21.1145 6.4443C22.2133 8.08879 22.7998 10.0222 22.7998 12C22.7969 14.6513 21.7424 17.1931 19.8677 19.0679C17.9929 20.9426 15.4511 21.9971 12.7998 22Z"
                fill="#757575"
              />
              <path
                d="M12.7998 5C12.5346 5 12.2802 5.10536 12.0927 5.29289C11.9052 5.48043 11.7998 5.73478 11.7998 6V14C11.7998 14.2652 11.9052 14.5196 12.0927 14.7071C12.2802 14.8946 12.5346 15 12.7998 15C13.065 15 13.3194 14.8946 13.5069 14.7071C13.6944 14.5196 13.7998 14.2652 13.7998 14V6C13.7998 5.73478 13.6944 5.48043 13.5069 5.29289C13.3194 5.10536 13.065 5 12.7998 5Z"
                fill="#757575"
              />
              <path
                d="M13.7998 18C13.7998 17.4477 13.3521 17 12.7998 17C12.2475 17 11.7998 17.4477 11.7998 18C11.7998 18.5523 12.2475 19 12.7998 19C13.3521 19 13.7998 18.5523 13.7998 18Z"
                fill="#757575"
              />
            </g>
            <defs>
              <clipPath id="clip0_1_1178">
                <rect
                  width="24"
                  height="24"
                  fill="white"
                  transform="translate(0.799805)"
                />
              </clipPath>
            </defs>
          </svg>
        }
        count={data?.data?.approved ?? 0}
        text={t("cancelledRequests")}
      />
      {/* <CustomRadioGroup
        defaultValue="all"
        buttonStyle="solid"
        className="p-2 rounded-xl mb-2 flex-grow"
        style={{
          backgroundColor: token.colorSecondary,
        }}
        size="large"
        name="status"
        onChange={onChange}
        value={value}
        {...props}
      >
        <CustomRadioButton value="all" count={total} hasCount={total > 0}>
          {t("all")}
        </CustomRadioButton>
        {statuses.map((status) => (
          <CustomRadioButton
            key={status}
            value={status}
            count={data?.data?.[status] ?? 0}
            hasCount={data?.data?.[status] > 0}
          >
            {t(status)}
          </CustomRadioButton>
        ))}
      </CustomRadioGroup> */}
    </>
  );
}
