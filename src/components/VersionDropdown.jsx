import React, { useEffect, useState } from "react";
import Cookies from "js-cookie";
import { Dropdown, Menu, Radio } from "antd";
import { MdOutlineDirectionsBusFilled, MdFastfood } from "react-icons/md";
import { IoCarSportOutline } from "react-icons/io5";
import { useTranslation } from "react-i18next";
import HeaderButton from "./HeaderButton";
import styled from "styled-components";

export default function VersionDropdown() {
  const { t } = useTranslation();
  const [current, setCurrent] = useState(() => {
    return Cookies.get("version");
  });
  const [availableVersions, setAvailableVersions] = useState([]);
  const user = Cookies.get("user");

  useEffect(() => {
    if (!user) return;

    let services = JSON.parse(user)?.services ?? [];
    let availableVersions = [];
    
    if (!services) {
      return;
    }

    let hasHospitality = services.some(
      (service) =>
        service.routes == "hospitality" || service.routes == "restaurant",
    );
    if (hasHospitality) {
      availableVersions.push("hospitality");
      availableVersions.push("dummy");
    }
    let hasBus = services.some((service) => service.routes == "bus");
    if (hasBus) {
      availableVersions.push("bus");
      availableVersions.push("dummy");
    }
    //TODO: if localhost or has permission to vip
    let hasVip = services.some((service) => service.routes == "vip");
    if (hasVip) {
      availableVersions.push("vip");
    }
    let hasSuper = JSON.parse(user)?.roles.includes("Administrator");
    if (hasSuper) {
      availableVersions.push("admin");
    }

    setAvailableVersions(availableVersions);
  }, [user]);

  function getIconFromVersion(version, fill) {
    switch (version) {
      case "hospitality":
        return (
          <svg
            width="20"
            height="21"
            viewBox="0 0 20 21"
            fill="none"
            style={{
              color: fill ? fill : "#E09F49",
            }}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16.6667 8.83333H16.5708C16.6864 8.45274 16.7126 8.05059 16.6473 7.65823C16.582 7.26586 16.4269 6.89388 16.1943 6.57127C15.9616 6.24866 15.6575 5.98414 15.3058 5.79832C14.9541 5.61251 14.5643 5.51041 14.1667 5.5H2.5C-2.0425 5.81 0.833333 12.7092 2.00917 14.5933C2.53647 15.3921 3.25544 16.0461 4.10044 16.4956C4.94545 16.9451 5.88958 17.1758 6.84667 17.1667H9.81917C10.7608 17.1753 11.69 16.9517 12.5246 16.5156C13.3592 16.0796 14.0735 15.4445 14.6042 14.6667H16.6667C20.6783 14.5892 21.4658 8.685 16.6667 8.83333ZM9.81917 15.5H6.84667C6.16682 15.5092 5.49551 15.3478 4.89413 15.0306C4.29276 14.7133 3.78049 14.2504 3.40417 13.6842C2.95083 13.25 0.411667 7.16667 2.5 7.16667H14.1667C14.2813 7.16629 14.3947 7.19024 14.4995 7.23692C14.6042 7.28361 14.6978 7.35197 14.7742 7.4375C14.8554 7.52699 14.9168 7.63266 14.9543 7.74756C14.9917 7.86246 15.0045 7.98399 14.9917 8.10417C14.5225 11.6533 13.64 15.3425 9.81917 15.5ZM16.6667 13H15.49C15.8326 12.1934 16.0987 11.3564 16.285 10.5C17.2925 10.4325 18.4067 10.68 18.3333 11.4525C18.3063 11.8747 18.1184 12.2705 17.8084 12.5583C17.4983 12.8462 17.0897 13.0043 16.6667 13ZM7.52083 3V1.33333C7.52083 1.11232 7.60863 0.900358 7.76491 0.744078C7.92119 0.587797 8.13315 0.5 8.35417 0.5C8.57518 0.5 8.78714 0.587797 8.94342 0.744078C9.0997 0.900358 9.1875 1.11232 9.1875 1.33333V3C9.1875 3.22101 9.0997 3.43298 8.94342 3.58926C8.78714 3.74554 8.57518 3.83333 8.35417 3.83333C8.13315 3.83333 7.92119 3.74554 7.76491 3.58926C7.60863 3.43298 7.52083 3.22101 7.52083 3ZM10.8542 3V1.33333C10.8542 1.11232 10.942 0.900358 11.0982 0.744078C11.2545 0.587797 11.4665 0.5 11.6875 0.5C11.9085 0.5 12.1205 0.587797 12.2768 0.744078C12.433 0.900358 12.5208 1.11232 12.5208 1.33333V3C12.5208 3.22101 12.433 3.43298 12.2768 3.58926C12.1205 3.74554 11.9085 3.83333 11.6875 3.83333C11.4665 3.83333 11.2545 3.74554 11.0982 3.58926C10.942 3.43298 10.8542 3.22101 10.8542 3ZM4.1875 3V1.33333C4.1875 1.11232 4.2753 0.900358 4.43158 0.744078C4.58786 0.587797 4.79982 0.5 5.02083 0.5C5.24185 0.5 5.45381 0.587797 5.61009 0.744078C5.76637 0.900358 5.85417 1.11232 5.85417 1.33333V3C5.85417 3.22101 5.76637 3.43298 5.61009 3.58926C5.45381 3.74554 5.24185 3.83333 5.02083 3.83333C4.79982 3.83333 4.58786 3.74554 4.43158 3.58926C4.2753 3.43298 4.1875 3.22101 4.1875 3ZM16.6667 19.6667C16.6667 19.8877 16.5789 20.0996 16.4226 20.2559C16.2663 20.4122 16.0543 20.5 15.8333 20.5H0.833333C0.61232 20.5 0.400358 20.4122 0.244078 20.2559C0.0877974 20.0996 0 19.8877 0 19.6667C0 19.4457 0.0877974 19.2337 0.244078 19.0774C0.400358 18.9211 0.61232 18.8333 0.833333 18.8333H15.8333C16.0543 18.8333 16.2663 18.9211 16.4226 19.0774C16.5789 19.2337 16.6667 19.4457 16.6667 19.6667Z"
              fill="currentColor"
            />
          </svg>
        );
      case "bus":
        return (
          <svg
            style={{
              color: fill ? fill : "#E09F49",
            }}
            width="20"
            height="21"
            viewBox="0 0 20 21"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18.3333 8.83398V5.85065C18.3333 5.65573 18.3222 5.46097 18.3 5.26731C18.1887 4.24792 17.7631 3.28838 17.0823 2.52155C16.4015 1.75472 15.499 1.21856 14.5 0.987314C11.5348 0.341468 8.46524 0.341468 5.5 0.987314C4.50102 1.21867 3.59867 1.75487 2.91786 2.52167C2.23705 3.28848 1.81146 4.24797 1.7 5.26731C1.67784 5.46097 1.66671 5.65573 1.66667 5.85065V8.83398C1.22464 8.83398 0.800716 9.00958 0.488155 9.32214C0.175595 9.6347 0 10.0586 0 10.5006L0 11.334C0 11.776 0.175595 12.1999 0.488155 12.5125C0.800716 12.8251 1.22464 13.0006 1.66667 13.0006V14.6673C1.66628 15.3142 1.81671 15.9523 2.10602 16.531C2.39534 17.1096 2.81556 17.6128 3.33333 18.0006V18.4173C3.33281 18.934 3.52428 19.4324 3.87057 19.8158C4.21686 20.1992 4.69326 20.4403 5.20729 20.4922C5.72132 20.5441 6.23631 20.4032 6.65228 20.0968C7.06825 19.7903 7.35552 19.3403 7.45833 18.834H12.5417C12.6445 19.3403 12.9318 19.7903 13.3477 20.0968C13.7637 20.4032 14.2787 20.5441 14.7927 20.4922C15.3067 20.4403 15.7831 20.1992 16.1294 19.8158C16.4757 19.4324 16.6672 18.934 16.6667 18.4173V18.0006C17.1844 17.6128 17.6047 17.1096 17.894 16.531C18.1833 15.9523 18.3337 15.3142 18.3333 14.6673V13.0006C18.7754 13.0006 19.1993 12.8251 19.5118 12.5125C19.8244 12.1999 20 11.776 20 11.334V10.5006C20 10.0586 19.8244 9.6347 19.5118 9.32214C19.1993 9.00958 18.7754 8.83398 18.3333 8.83398ZM3.33333 11.334V6.33398H16.6667V11.334H3.33333ZM5.87667 2.61065C8.59488 2.01934 11.4085 2.01934 14.1267 2.61065C14.6548 2.73372 15.144 2.98609 15.5504 3.34508C15.9569 3.70408 16.2677 4.15843 16.455 4.66731H13.3333C13.3333 4.4463 13.2455 4.23434 13.0893 4.07806C12.933 3.92178 12.721 3.83398 12.5 3.83398H7.5C7.27899 3.83398 7.06702 3.92178 6.91074 4.07806C6.75446 4.23434 6.66667 4.4463 6.66667 4.66731H3.545C3.73262 4.15804 4.04396 3.70342 4.45099 3.34439C4.85802 2.98537 5.34795 2.73322 5.87667 2.61065ZM14.1667 17.1673H5.83333C5.17029 17.1673 4.53441 16.9039 4.06557 16.4351C3.59673 15.9662 3.33333 15.3304 3.33333 14.6673V13.0006H5V13.834C5 14.055 5.0878 14.267 5.24408 14.4232C5.40036 14.5795 5.61232 14.6673 5.83333 14.6673C6.05435 14.6673 6.26631 14.5795 6.42259 14.4232C6.57887 14.267 6.66667 14.055 6.66667 13.834V13.0006H13.3333V13.834C13.3333 14.055 13.4211 14.267 13.5774 14.4232C13.7337 14.5795 13.9457 14.6673 14.1667 14.6673C14.3877 14.6673 14.5996 14.5795 14.7559 14.4232C14.9122 14.267 15 14.055 15 13.834V13.0006H16.6667V14.6673C16.6667 15.3304 16.4033 15.9662 15.9344 16.4351C15.4656 16.9039 14.8297 17.1673 14.1667 17.1673Z"
              fill="currentColor"
            />
          </svg>
        );
      case "visitors":
        return (
          <svg
            style={{
              color: fill ? fill : "#E09F49",
            }}
            width="20"
            height="21"
            viewBox="0 0 20 21"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18.3333 8.83398V5.85065C18.3333 5.65573 18.3222 5.46097 18.3 5.26731C18.1887 4.24792 17.7631 3.28838 17.0823 2.52155C16.4015 1.75472 15.499 1.21856 14.5 0.987314C11.5348 0.341468 8.46524 0.341468 5.5 0.987314C4.50102 1.21867 3.59867 1.75487 2.91786 2.52167C2.23705 3.28848 1.81146 4.24797 1.7 5.26731C1.67784 5.46097 1.66671 5.65573 1.66667 5.85065V8.83398C1.22464 8.83398 0.800716 9.00958 0.488155 9.32214C0.175595 9.6347 0 10.0586 0 10.5006L0 11.334C0 11.776 0.175595 12.1999 0.488155 12.5125C0.800716 12.8251 1.22464 13.0006 1.66667 13.0006V14.6673C1.66628 15.3142 1.81671 15.9523 2.10602 16.531C2.39534 17.1096 2.81556 17.6128 3.33333 18.0006V18.4173C3.33281 18.934 3.52428 19.4324 3.87057 19.8158C4.21686 20.1992 4.69326 20.4403 5.20729 20.4922C5.72132 20.5441 6.23631 20.4032 6.65228 20.0968C7.06825 19.7903 7.35552 19.3403 7.45833 18.834H12.5417C12.6445 19.3403 12.9318 19.7903 13.3477 20.0968C13.7637 20.4032 14.2787 20.5441 14.7927 20.4922C15.3067 20.4403 15.7831 20.1992 16.1294 19.8158C16.4757 19.4324 16.6672 18.934 16.6667 18.4173V18.0006C17.1844 17.6128 17.6047 17.1096 17.894 16.531C18.1833 15.9523 18.3337 15.3142 18.3333 14.6673V13.0006C18.7754 13.0006 19.1993 12.8251 19.5118 12.5125C19.8244 12.1999 20 11.776 20 11.334V10.5006C20 10.0586 19.8244 9.6347 19.5118 9.32214C19.1993 9.00958 18.7754 8.83398 18.3333 8.83398ZM3.33333 11.334V6.33398H16.6667V11.334H3.33333ZM5.87667 2.61065C8.59488 2.01934 11.4085 2.01934 14.1267 2.61065C14.6548 2.73372 15.144 2.98609 15.5504 3.34508C15.9569 3.70408 16.2677 4.15843 16.455 4.66731H13.3333C13.3333 4.4463 13.2455 4.23434 13.0893 4.07806C12.933 3.92178 12.721 3.83398 12.5 3.83398H7.5C7.27899 3.83398 7.06702 3.92178 6.91074 4.07806C6.75446 4.23434 6.66667 4.4463 6.66667 4.66731H3.545C3.73262 4.15804 4.04396 3.70342 4.45099 3.34439C4.85802 2.98537 5.34795 2.73322 5.87667 2.61065ZM14.1667 17.1673H5.83333C5.17029 17.1673 4.53441 16.9039 4.06557 16.4351C3.59673 15.9662 3.33333 15.3304 3.33333 14.6673V13.0006H5V13.834C5 14.055 5.0878 14.267 5.24408 14.4232C5.40036 14.5795 5.61232 14.6673 5.83333 14.6673C6.05435 14.6673 6.26631 14.5795 6.42259 14.4232C6.57887 14.267 6.66667 14.055 6.66667 13.834V13.0006H13.3333V13.834C13.3333 14.055 13.4211 14.267 13.5774 14.4232C13.7337 14.5795 13.9457 14.6673 14.1667 14.6673C14.3877 14.6673 14.5996 14.5795 14.7559 14.4232C14.9122 14.267 15 14.055 15 13.834V13.0006H16.6667V14.6673C16.6667 15.3304 16.4033 15.9662 15.9344 16.4351C15.4656 16.9039 14.8297 17.1673 14.1667 17.1673Z"
              fill="currentColor"
            />
          </svg>
        );
      default:
        return (
          <svg
            style={{
              color: fill ? fill : "#E09F49",
            }}
            width="20"
            height="21"
            viewBox="0 0 20 21"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18.3333 8.83398V5.85065C18.3333 5.65573 18.3222 5.46097 18.3 5.26731C18.1887 4.24792 17.7631 3.28838 17.0823 2.52155C16.4015 1.75472 15.499 1.21856 14.5 0.987314C11.5348 0.341468 8.46524 0.341468 5.5 0.987314C4.50102 1.21867 3.59867 1.75487 2.91786 2.52167C2.23705 3.28848 1.81146 4.24797 1.7 5.26731C1.67784 5.46097 1.66671 5.65573 1.66667 5.85065V8.83398C1.22464 8.83398 0.800716 9.00958 0.488155 9.32214C0.175595 9.6347 0 10.0586 0 10.5006L0 11.334C0 11.776 0.175595 12.1999 0.488155 12.5125C0.800716 12.8251 1.22464 13.0006 1.66667 13.0006V14.6673C1.66628 15.3142 1.81671 15.9523 2.10602 16.531C2.39534 17.1096 2.81556 17.6128 3.33333 18.0006V18.4173C3.33281 18.934 3.52428 19.4324 3.87057 19.8158C4.21686 20.1992 4.69326 20.4403 5.20729 20.4922C5.72132 20.5441 6.23631 20.4032 6.65228 20.0968C7.06825 19.7903 7.35552 19.3403 7.45833 18.834H12.5417C12.6445 19.3403 12.9318 19.7903 13.3477 20.0968C13.7637 20.4032 14.2787 20.5441 14.7927 20.4922C15.3067 20.4403 15.7831 20.1992 16.1294 19.8158C16.4757 19.4324 16.6672 18.934 16.6667 18.4173V18.0006C17.1844 17.6128 17.6047 17.1096 17.894 16.531C18.1833 15.9523 18.3337 15.3142 18.3333 14.6673V13.0006C18.7754 13.0006 19.1993 12.8251 19.5118 12.5125C19.8244 12.1999 20 11.776 20 11.334V10.5006C20 10.0586 19.8244 9.6347 19.5118 9.32214C19.1993 9.00958 18.7754 8.83398 18.3333 8.83398ZM3.33333 11.334V6.33398H16.6667V11.334H3.33333ZM5.87667 2.61065C8.59488 2.01934 11.4085 2.01934 14.1267 2.61065C14.6548 2.73372 15.144 2.98609 15.5504 3.34508C15.9569 3.70408 16.2677 4.15843 16.455 4.66731H13.3333C13.3333 4.4463 13.2455 4.23434 13.0893 4.07806C12.933 3.92178 12.721 3.83398 12.5 3.83398H7.5C7.27899 3.83398 7.06702 3.92178 6.91074 4.07806C6.75446 4.23434 6.66667 4.4463 6.66667 4.66731H3.545C3.73262 4.15804 4.04396 3.70342 4.45099 3.34439C4.85802 2.98537 5.34795 2.73322 5.87667 2.61065ZM14.1667 17.1673H5.83333C5.17029 17.1673 4.53441 16.9039 4.06557 16.4351C3.59673 15.9662 3.33333 15.3304 3.33333 14.6673V13.0006H5V13.834C5 14.055 5.0878 14.267 5.24408 14.4232C5.40036 14.5795 5.61232 14.6673 5.83333 14.6673C6.05435 14.6673 6.26631 14.5795 6.42259 14.4232C6.57887 14.267 6.66667 14.055 6.66667 13.834V13.0006H13.3333V13.834C13.3333 14.055 13.4211 14.267 13.5774 14.4232C13.7337 14.5795 13.9457 14.6673 14.1667 14.6673C14.3877 14.6673 14.5996 14.5795 14.7559 14.4232C14.9122 14.267 15 14.055 15 13.834V13.0006H16.6667V14.6673C16.6667 15.3304 16.4033 15.9662 15.9344 16.4351C15.4656 16.9039 14.8297 17.1673 14.1667 17.1673Z"
              fill="#3B953B"
            />
          </svg>
        );
    }
  }

  return (
    <div className="relative">
      <CustomDropdown
        className="rounded-full flex items-center gap-2 justify-center"
        menu={{
          items: [
            ...availableVersions.map((version) => {
              if (version == "dummy") {
                return {
                  type: "divider",
                };
              }
              return {
                label: (
                  <div className={"flex gap-2 w-36"}>
                    {getIconFromVersion(version)}
                    <p className={"grow"}>{t(version)}</p>
                    <Radio checked={version == current} />
                  </div>
                ),
                value: version,
                key: version,
              };
            }),
          ],
          onClick: ({ key }) => {
            setCurrent(key);
            Cookies.set("version", key);
            window.location.replace("/");
          },
        }}
      >
        <HeaderButton
          id="header-button"
          icon={getIconFromVersion(current, "#FFFFFF")}
        />
      </CustomDropdown>
    </div>
  );
}

const CustomDropdown = styled(Dropdown)`
  & {
    background: yellow;
  }
`;
